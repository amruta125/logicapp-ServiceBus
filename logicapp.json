{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vulnerabilityAssessments_Default_storageContainerPath": {
            "type": "SecureString"
        },
        "connections_sql_name": {
            "defaultValue": "sql",
            "type": "String"
        },
        "workflows_demo_name": {
            "defaultValue": "demo",
            "type": "String"
        },
        "sites_fa_tsg_aip_eg_name": {
            "defaultValue": "fa-tsg-aip-eg",
            "type": "String"
        },
        "sites_fa_tsg_aip_app_name": {
            "defaultValue": "fa-tsg-aip-app",
            "type": "String"
        },
        "connections_azureblob_name": {
            "defaultValue": "azureblob",
            "type": "String"
        },
        "connections_office365_name": {
            "defaultValue": "office365",
            "type": "String"
        },
        "connections_servicebus_name": {
            "defaultValue": "servicebus",
            "type": "String"
        },
        "servers_sqlsvr_tsg_aip_svr1_name": {
            "defaultValue": "sqlsvr-tsg-aip-svr1",
            "type": "String"
        },
        "namespaces_tsg_aip_siem_name": {
            "defaultValue": "tsg-aip-siem",
            "type": "String"
        },
        "components_fa_tsg_aip_eg_name": {
            "defaultValue": "fa-tsg-aip-eg",
            "type": "String"
        },
        "components_fa_tsg_aip_app_name": {
            "defaultValue": "fa-tsg-aip-app",
            "type": "String"
        },
        "storageAccounts_satsgaipsa1_name": {
            "defaultValue": "satsgaipsa1",
            "type": "String"
        },
        "storageAccounts_satsgaipsa2_name": {
            "defaultValue": "satsgaipsa2",
            "type": "String"
        },
        "sites_fa_tsg_aip_NYOrderDelivery_name": {
            "defaultValue": "fa-tsg-aip-NYOrderDelivery",
            "type": "String"
        },
        "workflows_la_tsg_aip_GetSAPData_name": {
            "defaultValue": "la-tsg-aip-GetSAPData",
            "type": "String"
        },
        "serverfarms_ASP_rgtsgaipgrp1_86a4_name": {
            "defaultValue": "ASP-rgtsgaipgrp1-86a4",
            "type": "String"
        },
        "serverfarms_ASP_rgtsgaipgrp1_86c4_name": {
            "defaultValue": "ASP-rgtsgaipgrp1-86c4",
            "type": "String"
        },
        "serverfarms_ASP_rgtsgaipgrp1_8b57_name": {
            "defaultValue": "ASP-rgtsgaipgrp1-8b57",
            "type": "String"
        },
        "systemTopics_eg_tsg_aip_topic_name": {
            "defaultValue": "eg-tsg-aip-topic",
            "type": "String"
        },
        "integrationAccounts_ia_tsg_aip_ia1_name": {
            "defaultValue": "ia-tsg-aip-ia1",
            "type": "String"
        },
        "workflows_la_tsg_aip_orderdelivery_name": {
            "defaultValue": "la-tsg-aip-orderdelivery",
            "type": "String"
        },
        "workflows_la_tsg_aip_BostonOrderDelivery_name": {
            "defaultValue": "la-tsg-aip-BostonOrderDelivery",
            "type": "String"
        },
        "workflows_la_tsg_aip_OrderRequestProcess_name": {
            "defaultValue": "la-tsg-aip-OrderRequestProcess",
            "type": "String"
        },
        "namespaces_sb_tsg_aip_OrderDelivery_name": {
            "defaultValue": "sb-tsg-aip-OrderDelivery",
            "type": "String"
        },
        "storageAccounts_storageaccountrgtsg9b78_name": {
            "defaultValue": "storageaccountrgtsg9b78",
            "type": "String"
        },
        "databaseAccounts_cosmosdb_tsg_aip_cosmos1_name": {
            "defaultValue": "cosmosdb-tsg-aip-cosmos1",
            "type": "String"
        },
        "components_fa_tsg_aip_NYOrderDeliveryAppInsight_name": {
            "defaultValue": "fa-tsg-aip-NYOrderDeliveryAppInsight",
            "type": "String"
        },
        "actionGroups_Application_Insights_Smart_Detection_name": {
            "defaultValue": "Application Insights Smart Detection",
            "type": "String"
        },
        "customApis_lacustomconnector_tsg_aip_textanalyticsconnector_name": {
            "defaultValue": "lacustomconnector-tsg-aip-textanalyticsconnector",
            "type": "String"
        },
        "connections_lacustomconnector_tsg_aip_textanalyticsconnector_name": {
            "defaultValue": "lacustomconnector-tsg-aip-textanalyticsconnector",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___fa_tsg_aip_eg_name": {
            "defaultValue": "failure anomalies - fa-tsg-aip-eg",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___fa_tsg_aip_app_name": {
            "defaultValue": "failure anomalies - fa-tsg-aip-app",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___fa_tsg_aip_nyorderdeliveryappinsight_name": {
            "defaultValue": "failure anomalies - fa-tsg-aip-nyorderdeliveryappinsight",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        
       
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_la_tsg_aip_GetSAPData_name')]",
            "location": "eastus2",
            "tags": {
                "CaseCode": "dp0",
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "Tier": "Sandbox"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "request": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "ProductRequest": {
                                            "properties": {
                                                "CustomerID": {
                                                    "type": "string"
                                                },
                                                "ProductID": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "HTTP": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "uri": "https://espmrefapps.hana.ondemand.com/espm-cloud-web/espm.svc/Products('@{xpath(xml(triggerBody()),'string(/ProductRequest/ProductID)')}') \n"
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "inputs": {
                                "body": "@body('HTTP')",
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[parameters('namespaces_sb_tsg_aip_OrderDelivery_name')]",
            "location": "East US 2",
            "tags": {
                "Tier": "Sandbox",
                "CaseCode": "dp0",
                "Department": "TSG",
                "Owner": "TSGCloudOps"
            },
            "sku": {
                "name": "Standard",
                "tier": "Standard"
            },
            "properties": {
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccounts_satsgaipsa1_name')]",
            "location": "eastus2",
            "tags": {
                "Tier": "Sandbox",
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "CaseCode": "dp0"
            },
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "minimumTlsVersion": "TLS1_0",
                "allowBlobPublicAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Cool"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_name')]",
            "location": "eastus2",
            "kind": "V1",
            "properties": {
                "displayName": "When order is placed",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/95977e9e-cd99-4dff-b085-498c9c0a4fb2/providers/Microsoft.Web/locations/eastus2/managedApis/', parameters('connections_azureblob_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_servicebus_name')]",
            "location": "eastus2",
            "kind": "V1",
            "properties": {
                "displayName": "sb-tsg-aip-OrderDelivery-Connection",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/95977e9e-cd99-4dff-b085-498c9c0a4fb2/providers/Microsoft.Web/locations/eastus2/managedApis/', parameters('connections_servicebus_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_la_tsg_aip_orderdelivery_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_name'))]"
            ],
            "tags": {
                "CaseCode": "dp0",
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "Tier": "Sandbox"
            },
            "identity": {
                "principalId": "a0cc69f0-61d6-4d62-8901-86bcba28a5a8",
                "tenantId": "eb120e12-65f1-477a-be8c-fe4f65926724",
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "CustomerID": {
                                            "type": "string"
                                        },
                                        "ItemQuantity": {
                                            "type": "string"
                                        },
                                        "LocationCode": {
                                            "type": "string"
                                        },
                                        "OrderDate": {
                                            "type": "string"
                                        },
                                        "OrderID": {
                                            "type": "string"
                                        },
                                        "ProductID": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Send_message": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "ContentData": "@{base64(triggerBody())}",
                                    "ContentType": "application/json",
                                    "Properties": "@triggerBody()"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/@{encodeURIComponent(encodeURIComponent('orders'))}/messages",
                                "retryPolicy": {
                                    "type": "none"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_name'))]",
                                "connectionName": "servicebus",
                                "id": "/subscriptions/95977e9e-cd99-4dff-b085-498c9c0a4fb2/providers/Microsoft.Web/locations/eastus2/managedApis/servicebus"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_sb_tsg_aip_OrderDelivery_name'), '/RootManageSharedAccessKey')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_sb_tsg_aip_OrderDelivery_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/networkRuleSets",
            "apiVersion": "2018-01-01-preview",
            "name": "[concat(parameters('namespaces_sb_tsg_aip_OrderDelivery_name'), '/default')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_sb_tsg_aip_OrderDelivery_name'))]"
            ],
            "properties": {
                "defaultAction": "Deny",
                "virtualNetworkRules": [],
                "ipRules": []
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_sb_tsg_aip_OrderDelivery_name'), '/invoice')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_sb_tsg_aip_OrderDelivery_name'))]"
            ],
            "properties": {
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_sb_tsg_aip_OrderDelivery_name'), '/orders')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_sb_tsg_aip_OrderDelivery_name'))]"
            ],
            "properties": {
                "defaultMessageTimeToLive": "P14D",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": true,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        
    
        
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa1_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa1_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
       
      

      
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_lacustomconnector_tsg_aip_textanalyticsconnector_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/customApis', parameters('customApis_lacustomconnector_tsg_aip_textanalyticsconnector_name'))]"
            ],
            "kind": "V1",
            "properties": {
                "displayName": "demo",
                "customParameterValues": {},
                "api": {
                    "id": "[resourceId('Microsoft.Web/customApis', parameters('customApis_lacustomconnector_tsg_aip_textanalyticsconnector_name'))]"
                }
            }
        },
        
        
     
        
        
        
       
      
       
       
        
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_la_tsg_aip_BostonOrderDelivery_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_office365_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_topic_subscription_(auto-complete)": {
                            "recurrence": {
                                "frequency": "Second",
                                "interval": 30
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('orders'))}/subscriptions/@{encodeURIComponent('bostonOrders')}/messages/head",
                                "queries": {
                                    "subscriptionType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Send_an_email_(V2)": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Body": "<p>Hi Team,<br>\n<br>\nAn order is received for Boston location.<br>\n<br>\nThanks,<br>\nOrderProcurement Team</p>",
                                    "Subject": "Boston Order Notification",
                                    "To": "deepshikha.lathiya@infosys.com"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "office365_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_office365_name'))]",
                                "connectionName": "office365",
                                "id": "/subscriptions/95977e9e-cd99-4dff-b085-498c9c0a4fb2/providers/Microsoft.Web/locations/eastus2/managedApis/office365"
                            },
                            "servicebus_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_name'))]",
                                "connectionName": "servicebus",
                                "id": "/subscriptions/95977e9e-cd99-4dff-b085-498c9c0a4fb2/providers/Microsoft.Web/locations/eastus2/managedApis/servicebus"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_sb_tsg_aip_OrderDelivery_name'), '/orders/bostonOrders')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_sb_tsg_aip_OrderDelivery_name'), 'orders')]",
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_sb_tsg_aip_OrderDelivery_name'))]"
            ],
            "properties": {
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 1000,
                "status": "Active",
                "enableBatchedOperations": true,
                "autoDeleteOnIdle": "P10675198DT2H48M5S"
            }
        },
        {
        
       
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa1_name'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_satsgaipsa1_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa1_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
                "parameters": {
                    "$connections": {
                        "value": {
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_office365_name'))]",
                                "connectionName": "office365",
                                "id": "/subscriptions/95977e9e-cd99-4dff-b085-498c9c0a4fb2/providers/Microsoft.Web/locations/eastus2/managedApis/office365"
                            },
                            "sql": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]",
                                "connectionName": "sql",
                                "id": "/subscriptions/95977e9e-cd99-4dff-b085-498c9c0a4fb2/providers/Microsoft.Web/locations/eastus2/managedApis/sql"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_sb_tsg_aip_OrderDelivery_name'), '/orders/bostonOrders/LocationCode')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_sb_tsg_aip_OrderDelivery_name'), 'orders', 'bostonOrders')]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_sb_tsg_aip_OrderDelivery_name'), 'orders')]",
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_sb_tsg_aip_OrderDelivery_name'))]"
            ],
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "LocationCode='Boston'",
                    "compatibilityLevel": 20
                }
            }
        }
    ]
}
