{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vulnerabilityAssessments_Default_storageContainerPath": {
            "type": "SecureString"
        },
        "connections_sql_name": {
            "defaultValue": "sql",
            "type": "String"
        },
        "workflows_demo_name": {
            "defaultValue": "demo",
            "type": "String"
        },
        "sites_fa_tsg_aip_eg_name": {
            "defaultValue": "fa-tsg-aip-eg",
            "type": "String"
        },
        "sites_fa_tsg_aip_app_name": {
            "defaultValue": "fa-tsg-aip-app",
            "type": "String"
        },
        "connections_azureblob_name": {
            "defaultValue": "azureblob",
            "type": "String"
        },
        "connections_office365_name": {
            "defaultValue": "office365",
            "type": "String"
        },
        "connections_servicebus_name": {
            "defaultValue": "servicebus",
            "type": "String"
        },
        "servers_sqlsvr_tsg_aip_svr1_name": {
            "defaultValue": "sqlsvr-tsg-aip-svr1",
            "type": "String"
        },
        "namespaces_tsg_aip_siem_name": {
            "defaultValue": "tsg-aip-siem",
            "type": "String"
        },
        "components_fa_tsg_aip_eg_name": {
            "defaultValue": "fa-tsg-aip-eg",
            "type": "String"
        },
        "components_fa_tsg_aip_app_name": {
            "defaultValue": "fa-tsg-aip-app",
            "type": "String"
        },
        "storageAccounts_satsgaipsa1_name": {
            "defaultValue": "satsgaipsa1",
            "type": "String"
        },
        "storageAccounts_satsgaipsa2_name": {
            "defaultValue": "satsgaipsa2",
            "type": "String"
        },
        "sites_fa_tsg_aip_NYOrderDelivery_name": {
            "defaultValue": "fa-tsg-aip-NYOrderDelivery",
            "type": "String"
        },
        "workflows_la_tsg_aip_GetSAPData_name": {
            "defaultValue": "la-tsg-aip-GetSAPData",
            "type": "String"
        },
        "serverfarms_ASP_rgtsgaipgrp1_86a4_name": {
            "defaultValue": "ASP-rgtsgaipgrp1-86a4",
            "type": "String"
        },
        "serverfarms_ASP_rgtsgaipgrp1_86c4_name": {
            "defaultValue": "ASP-rgtsgaipgrp1-86c4",
            "type": "String"
        },
        "serverfarms_ASP_rgtsgaipgrp1_8b57_name": {
            "defaultValue": "ASP-rgtsgaipgrp1-8b57",
            "type": "String"
        },
        "systemTopics_eg_tsg_aip_topic_name": {
            "defaultValue": "eg-tsg-aip-topic",
            "type": "String"
        },
        "integrationAccounts_ia_tsg_aip_ia1_name": {
            "defaultValue": "ia-tsg-aip-ia1",
            "type": "String"
        },
        "workflows_la_tsg_aip_orderdelivery_name": {
            "defaultValue": "la-tsg-aip-orderdelivery",
            "type": "String"
        },
        "workflows_la_tsg_aip_BostonOrderDelivery_name": {
            "defaultValue": "la-tsg-aip-BostonOrderDelivery",
            "type": "String"
        },
        "workflows_la_tsg_aip_OrderRequestProcess_name": {
            "defaultValue": "la-tsg-aip-OrderRequestProcess",
            "type": "String"
        },
        "namespaces_sb_tsg_aip_OrderDelivery_name": {
            "defaultValue": "sb-tsg-aip-OrderDelivery",
            "type": "String"
        },
        "storageAccounts_storageaccountrgtsg9b78_name": {
            "defaultValue": "storageaccountrgtsg9b78",
            "type": "String"
        },
        "databaseAccounts_cosmosdb_tsg_aip_cosmos1_name": {
            "defaultValue": "cosmosdb-tsg-aip-cosmos1",
            "type": "String"
        },
        "components_fa_tsg_aip_NYOrderDeliveryAppInsight_name": {
            "defaultValue": "fa-tsg-aip-NYOrderDeliveryAppInsight",
            "type": "String"
        },
        "actionGroups_Application_Insights_Smart_Detection_name": {
            "defaultValue": "Application Insights Smart Detection",
            "type": "String"
        },
        "customApis_lacustomconnector_tsg_aip_textanalyticsconnector_name": {
            "defaultValue": "lacustomconnector-tsg-aip-textanalyticsconnector",
            "type": "String"
        },
        "connections_lacustomconnector_tsg_aip_textanalyticsconnector_name": {
            "defaultValue": "lacustomconnector-tsg-aip-textanalyticsconnector",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___fa_tsg_aip_eg_name": {
            "defaultValue": "failure anomalies - fa-tsg-aip-eg",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___fa_tsg_aip_app_name": {
            "defaultValue": "failure anomalies - fa-tsg-aip-app",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___fa_tsg_aip_nyorderdeliveryappinsight_name": {
            "defaultValue": "failure anomalies - fa-tsg-aip-nyorderdeliveryappinsight",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2020-06-01-preview",
            "name": "[parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name')]",
            "location": "East US 2",
            "tags": {
                "defaultExperience": "Core (SQL)",
                "Tier": "Sandbox",
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "CaseCode": "dp0",
                "hidden-cosmos-mmspecial": "",
                "CosmosAccountType": "Non-Production"
            },
            "kind": "GlobalDocumentDB",
            "identity": {
                "type": "None"
            },
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": true,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": true,
                "enableAnalyticalStorage": false,
                "createMode": "Default",
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "East US 2",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    },
                    {
                        "locationName": "Central US",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 1,
                        "isZoneRedundant": false
                    }
                ],
                "cors": [],
                "capabilities": [],
                "ipRules": [],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": 240,
                        "backupRetentionIntervalInHours": 8
                    }
                }
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[parameters('namespaces_tsg_aip_siem_name')]",
            "location": "East US 2",
            "tags": {
                "Tier": "Sandbox",
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "CaseCode": "dp0"
            },
            "sku": {
                "name": "Basic",
                "tier": "Basic",
                "capacity": 1
            },
            "properties": {
                "zoneRedundant": false,
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0,
                "kafkaEnabled": false
            }
        },
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2019-03-01",
            "name": "[parameters('actionGroups_Application_Insights_Smart_Detection_name')]",
            "location": "Global",
            "properties": {
                "groupShortName": "SmartDetect",
                "enabled": true,
                "emailReceivers": [],
                "smsReceivers": [],
                "webhookReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": []
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[parameters('components_fa_tsg_aip_app_name')]",
            "location": "eastus2",
            "tags": {
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "CaseCode": "dp0"
            },
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Request_Source": "IbizaWebAppExtensionCreate",
                "RetentionInDays": 90,
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[parameters('components_fa_tsg_aip_eg_name')]",
            "location": "eastus2",
            "tags": {
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "CaseCode": "dp0"
            },
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Request_Source": "IbizaWebAppExtensionCreate",
                "RetentionInDays": 90,
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[parameters('components_fa_tsg_aip_NYOrderDeliveryAppInsight_name')]",
            "location": "eastus2",
            "tags": {
                "hidden-link:/subscriptions/95977e9e-cd99-4dff-b085-498c9c0a4fb2/resourceGroups/rg-tsg-aip-grp1/providers/Microsoft.Web/sites/fa-tsg-aip-NYOrderDelivery": "Resource"
            },
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Flow_Type": "Redfield",
                "Request_Source": "AppServiceEnablementCreate",
                "RetentionInDays": 90,
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Logic/integrationAccounts",
            "apiVersion": "2016-06-01",
            "name": "[parameters('integrationAccounts_ia_tsg_aip_ia1_name')]",
            "location": "eastus2",
            "tags": {
                "Tier": "Sandbox",
                "Department": "TSG",
                "CaseCode": "dp0",
                "Owner": "TSGCloudOps"
            },
            "sku": {
                "name": "Free"
            },
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_demo_name')]",
            "location": "eastus2",
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Week",
                                "interval": 3
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {},
                    "outputs": {}
                },
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_la_tsg_aip_GetSAPData_name')]",
            "location": "eastus2",
            "tags": {
                "CaseCode": "dp0",
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "Tier": "Sandbox"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "request": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "ProductRequest": {
                                            "properties": {
                                                "CustomerID": {
                                                    "type": "string"
                                                },
                                                "ProductID": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "HTTP": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "uri": "https://espmrefapps.hana.ondemand.com/espm-cloud-web/espm.svc/Products('@{xpath(xml(triggerBody()),'string(/ProductRequest/ProductID)')}') \n"
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "inputs": {
                                "body": "@body('HTTP')",
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[parameters('namespaces_sb_tsg_aip_OrderDelivery_name')]",
            "location": "East US 2",
            "tags": {
                "Tier": "Sandbox",
                "CaseCode": "dp0",
                "Department": "TSG",
                "Owner": "TSGCloudOps"
            },
            "sku": {
                "name": "Standard",
                "tier": "Standard"
            },
            "properties": {
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2019-06-01-preview",
            "name": "[parameters('servers_sqlsvr_tsg_aip_svr1_name')]",
            "location": "eastus2",
            "tags": {
                "Tier": "Sandbox",
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "CaseCode": "dp0"
            },
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "svr1admin",
                "version": "12.0",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccounts_satsgaipsa1_name')]",
            "location": "eastus2",
            "tags": {
                "Tier": "Sandbox",
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "CaseCode": "dp0"
            },
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "minimumTlsVersion": "TLS1_0",
                "allowBlobPublicAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Cool"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccounts_satsgaipsa2_name')]",
            "location": "eastus2",
            "tags": {
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "CaseCode": "dp0"
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccounts_storageaccountrgtsg9b78_name')]",
            "location": "eastus2",
            "tags": {
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "CaseCode": "dp0"
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_name')]",
            "location": "eastus2",
            "kind": "V1",
            "properties": {
                "displayName": "When order is placed",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/95977e9e-cd99-4dff-b085-498c9c0a4fb2/providers/Microsoft.Web/locations/eastus2/managedApis/', parameters('connections_azureblob_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_office365_name')]",
            "location": "eastus2",
            "kind": "V1",
            "properties": {
                "displayName": "deepshikha.lathiya@ad.infosys.com",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/95977e9e-cd99-4dff-b085-498c9c0a4fb2/providers/Microsoft.Web/locations/eastus2/managedApis/', parameters('connections_office365_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_servicebus_name')]",
            "location": "eastus2",
            "kind": "V1",
            "properties": {
                "displayName": "sb-tsg-aip-OrderDelivery-Connection",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/95977e9e-cd99-4dff-b085-498c9c0a4fb2/providers/Microsoft.Web/locations/eastus2/managedApis/', parameters('connections_servicebus_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_sql_name')]",
            "location": "eastus2",
            "kind": "V1",
            "properties": {
                "displayName": "[concat(parameters('connections_sql_name'), 'db-tsg-aip-customerdata ', parameters('connections_sql_name'), 'svr-tsg-aip-svr1.database.windows.net')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/95977e9e-cd99-4dff-b085-498c9c0a4fb2/providers/Microsoft.Web/locations/eastus2/managedApis/', parameters('connections_sql_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/customApis",
            "apiVersion": "2016-06-01",
            "name": "[parameters('customApis_lacustomconnector_tsg_aip_textanalyticsconnector_name')]",
            "location": "eastus2",
            "properties": {
                "connectionParameters": {
                    "api_key": {
                        "type": "securestring",
                        "uiDefinition": {
                            "displayName": "API Key",
                            "description": "The API Key for this api",
                            "tooltip": "Provide your API Key",
                            "constraints": {
                                "tabIndex": 2,
                                "clearText": false,
                                "required": "true"
                            }
                        }
                    }
                },
                "description": "Uses the Cognitive Services Text Analytics Sentiment API to determine whether text is positive or negative",
                "displayName": "[parameters('customApis_lacustomconnector_tsg_aip_textanalyticsconnector_name')]",
                "iconUri": "/Content/retail/assets/default-connection-icon.e6bb72160664a5e37b9923c3d9f50ca5.2.svg"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('serverfarms_ASP_rgtsgaipgrp1_86a4_name')]",
            "location": "East US 2",
            "tags": {
                "CaseCode": "dp0",
                "Owner": "TSGCloudOps",
                "Tier": "Sandbox",
                "Department": "TSG"
            },
            "sku": {
                "name": "F1",
                "tier": "Free",
                "size": "F1",
                "family": "F",
                "capacity": 0
            },
            "kind": "app",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('serverfarms_ASP_rgtsgaipgrp1_86c4_name')]",
            "location": "East US 2",
            "tags": {
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "CaseCode": "dp0"
            },
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('serverfarms_ASP_rgtsgaipgrp1_8b57_name')]",
            "location": "East US 2",
            "tags": {
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "CaseCode": "dp0"
            },
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'))]"
            ]
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'), '/RetailDemo')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "RetailDemo"
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'), '/ToDoList')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "ToDoList"
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.EventGrid/systemTopics",
            "apiVersion": "2020-04-01-preview",
            "name": "[parameters('systemTopics_eg_tsg_aip_topic_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa1_name'))]"
            ],
            "properties": {
                "source": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa1_name'))]",
                "topicType": "Microsoft.Storage.StorageAccounts"
            }
        },
        {
            "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
            "apiVersion": "2020-04-01-preview",
            "name": "[concat(parameters('systemTopics_eg_tsg_aip_topic_name'), '/NS-f8968115296edaac4f9c86610d6ec319fc762089')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', parameters('systemTopics_eg_tsg_aip_topic_name'))]"
            ],
            "properties": {
                "destination": {
                    "properties": {
                        "maxEventsPerBatch": 1,
                        "preferredBatchSizeInKilobytes": 64
                    },
                    "endpointType": "WebHook"
                },
                "filter": {
                    "includedEventTypes": [
                        "Microsoft.Storage.BlobCreated",
                        "Microsoft.Storage.BlobDeleted"
                    ]
                },
                "eventDeliverySchema": "EventGridSchema",
                "retryPolicy": {
                    "maxDeliveryAttempts": 30,
                    "eventTimeToLiveInMinutes": 1440
                }
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_tsg_aip_siem_name'), '/RootManageSharedAccessKey')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_tsg_aip_siem_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_tsg_aip_siem_name'), '/insights-metrics-pt1m')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_tsg_aip_siem_name'))]"
            ],
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 4,
                "status": "Active"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_tsg_aip_siem_name'), '/', parameters('namespaces_tsg_aip_siem_name'), '-eventhub')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_tsg_aip_siem_name'))]"
            ],
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 2,
                "status": "Active"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/networkRuleSets",
            "apiVersion": "2018-01-01-preview",
            "name": "[concat(parameters('namespaces_tsg_aip_siem_name'), '/default')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_tsg_aip_siem_name'))]"
            ],
            "properties": {
                "defaultAction": "Deny",
                "virtualNetworkRules": [],
                "ipRules": []
            }
        },
        {
            "type": "Microsoft.Logic/integrationAccounts/maps",
            "apiVersion": "2016-06-01",
            "name": "[concat(parameters('integrationAccounts_ia_tsg_aip_ia1_name'), '/OrderRequest_To_CustomerInvoice')]",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/integrationAccounts', parameters('integrationAccounts_ia_tsg_aip_ia1_name'))]"
            ],
            "properties": {
                "mapType": "Xslt",
                "contentLink": {
                    "uri": "https://prod-10.eastus2.logic.azure.com:443/integrationAccounts/f778e3e81cd24482a552b7401dbb45fb/maps/OrderRequest_To_CustomerInvoice/contents/Value?api-version=2015-08-01-preview&se=2020-09-30T11%3A50%3A27.8061235Z&sp=%2Fmaps%2FOrderRequest_To_CustomerInvoice%2Fread&sv=1.0&sig=fIaDnE1I8P-3Zvlbv9gSaWYmMYJYlrJqLl7cNtcUFbo",
                    "contentVersion": "\"0x8D8393F672547D1\"",
                    "contentSize": 697,
                    "contentHash": {
                        "algorithm": "md5",
                        "value": "FRx76n/ZhUMgCsHdOlRfXA=="
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/integrationAccounts/maps",
            "apiVersion": "2016-06-01",
            "name": "[concat(parameters('integrationAccounts_ia_tsg_aip_ia1_name'), '/OrderRequestToCustomerInvoice')]",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/integrationAccounts', parameters('integrationAccounts_ia_tsg_aip_ia1_name'))]"
            ],
            "properties": {
                "mapType": "Xslt",
                "contentLink": {
                    "uri": "https://prod-10.eastus2.logic.azure.com:443/integrationAccounts/f778e3e81cd24482a552b7401dbb45fb/maps/OrderRequestToCustomerInvoice/contents/Value?api-version=2015-08-01-preview&se=2020-09-30T11%3A50%3A27.8061235Z&sp=%2Fmaps%2FOrderRequestToCustomerInvoice%2Fread&sv=1.0&sig=CphLDNF05opolGikYDT3rYPlHGP3AMcL8dlINbBcWBY",
                    "contentVersion": "\"0x8D838E791E12213\"",
                    "contentSize": 738,
                    "contentHash": {
                        "algorithm": "md5",
                        "value": "uil8YYeOSw+ILt2EYoZgJQ=="
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/integrationAccounts/maps",
            "apiVersion": "2016-06-01",
            "name": "[concat(parameters('integrationAccounts_ia_tsg_aip_ia1_name'), '/xsl_OrderRequest_To_CustomerInvoice')]",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/integrationAccounts', parameters('integrationAccounts_ia_tsg_aip_ia1_name'))]"
            ],
            "properties": {
                "mapType": "Xslt",
                "contentLink": {
                    "uri": "https://prod-10.eastus2.logic.azure.com:443/integrationAccounts/f778e3e81cd24482a552b7401dbb45fb/maps/xsl_OrderRequest_To_CustomerInvoice/contents/Value?api-version=2015-08-01-preview&se=2020-09-30T11%3A50%3A27.8061235Z&sp=%2Fmaps%2Fxsl_OrderRequest_To_CustomerInvoice%2Fread&sv=1.0&sig=jATX_WaZF1qENOrY9pZEhDtn5hL3fY_hQo5c__OvwuA",
                    "contentVersion": "\"0x8D839E4ED1BB784\"",
                    "contentSize": 738,
                    "contentHash": {
                        "algorithm": "md5",
                        "value": "uil8YYeOSw+ILt2EYoZgJQ=="
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/integrationAccounts/schemas",
            "apiVersion": "2016-06-01",
            "name": "[concat(parameters('integrationAccounts_ia_tsg_aip_ia1_name'), '/OrderRequest')]",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/integrationAccounts', parameters('integrationAccounts_ia_tsg_aip_ia1_name'))]"
            ],
            "properties": {
                "schemaType": "Xml",
                "documentName": "OrderRequest",
                "contentLink": {
                    "uri": "https://prod-10.eastus2.logic.azure.com:443/integrationAccounts/f778e3e81cd24482a552b7401dbb45fb/schemas/OrderRequest/contents/Value?api-version=2015-08-01-preview&se=2020-09-30T11%3A50%3A28.0092824Z&sp=%2Fschemas%2FOrderRequest%2Fread&sv=1.0&sig=NITZi68Jw5dX1QzLpVvqulMKbM7oSAn-Rmp5olPzH1M",
                    "contentVersion": "\"0x8D838E4228C2928\"",
                    "contentSize": 560,
                    "contentHash": {
                        "algorithm": "md5",
                        "value": "JCska+tSPEFq4fFOnoTQ3w=="
                    }
                },
                "metadata": {}
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_la_tsg_aip_orderdelivery_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_name'))]"
            ],
            "tags": {
                "CaseCode": "dp0",
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "Tier": "Sandbox"
            },
            "identity": {
                "principalId": "a0cc69f0-61d6-4d62-8901-86bcba28a5a8",
                "tenantId": "eb120e12-65f1-477a-be8c-fe4f65926724",
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "CustomerID": {
                                            "type": "string"
                                        },
                                        "ItemQuantity": {
                                            "type": "string"
                                        },
                                        "LocationCode": {
                                            "type": "string"
                                        },
                                        "OrderDate": {
                                            "type": "string"
                                        },
                                        "OrderID": {
                                            "type": "string"
                                        },
                                        "ProductID": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Send_message": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "ContentData": "@{base64(triggerBody())}",
                                    "ContentType": "application/json",
                                    "Properties": "@triggerBody()"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/@{encodeURIComponent(encodeURIComponent('orders'))}/messages",
                                "retryPolicy": {
                                    "type": "none"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_name'))]",
                                "connectionName": "servicebus",
                                "id": "/subscriptions/95977e9e-cd99-4dff-b085-498c9c0a4fb2/providers/Microsoft.Web/locations/eastus2/managedApis/servicebus"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_sb_tsg_aip_OrderDelivery_name'), '/RootManageSharedAccessKey')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_sb_tsg_aip_OrderDelivery_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/networkRuleSets",
            "apiVersion": "2018-01-01-preview",
            "name": "[concat(parameters('namespaces_sb_tsg_aip_OrderDelivery_name'), '/default')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_sb_tsg_aip_OrderDelivery_name'))]"
            ],
            "properties": {
                "defaultAction": "Deny",
                "virtualNetworkRules": [],
                "ipRules": []
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_sb_tsg_aip_OrderDelivery_name'), '/invoice')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_sb_tsg_aip_OrderDelivery_name'))]"
            ],
            "properties": {
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_sb_tsg_aip_OrderDelivery_name'), '/orders')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_sb_tsg_aip_OrderDelivery_name'))]"
            ],
            "properties": {
                "defaultMessageTimeToLive": "P14D",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": true,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/Default')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingSettings",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2019-06-01-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/sqldb-tsg-aip-customerdata')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "tags": {
                "Tier": "Sandbox",
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "CaseCode": "dp0"
            },
            "sku": {
                "name": "GP_S_Gen5",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 1
            },
            "kind": "v12.0,user,vcore,serverless",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 2147483648,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "readReplicaCount": 0,
                "autoPauseDelay": 60,
                "storageAccountType": "GRS",
                "minCapacity": 0.5
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/master/Default')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "retentionDays": 0,
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
                "isAzureMonitorTargetEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "retentionDays": 0,
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
                "isAzureMonitorTargetEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/master/Default')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2020-02-02-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/master/current')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "status": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged"
            }
        },
        {
            "type": "Microsoft.Sql/servers/extendedAuditingSettings",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/103.226.145.14')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "startIpAddress": "103.226.145.14",
                "endIpAddress": "103.226.145.14"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/103.228.220.234')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "startIpAddress": "103.228.220.234",
                "endIpAddress": "103.228.220.234"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/AllowAllWindowsAzureIps')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/ClientAddress_Deepshikha')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "startIpAddress": "103.226.145.27",
                "endIpAddress": "103.226.145.27"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/ClientIPAddress_2020-8-4_11-18-58')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "startIpAddress": "148.64.5.26",
                "endIpAddress": "148.64.5.26"
            }
        },
        {
            "type": "Microsoft.Sql/servers/keys",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/ServiceManaged')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyType": "ServiceManaged"
            }
        },
        {
            "type": "Microsoft.Sql/servers/securityAlertPolicies",
            "apiVersion": "2020-02-02-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
            "apiVersion": "2018-06-01-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                },
                "storageContainerPath": "[parameters('vulnerabilityAssessments_Default_storageContainerPath')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa1_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa1_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa2_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa2_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storageaccountrgtsg9b78_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountrgtsg9b78_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa1_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa1_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa2_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa2_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storageaccountrgtsg9b78_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountrgtsg9b78_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa1_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa1_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa2_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa2_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storageaccountrgtsg9b78_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountrgtsg9b78_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa1_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa1_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa2_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa2_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storageaccountrgtsg9b78_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountrgtsg9b78_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_lacustomconnector_tsg_aip_textanalyticsconnector_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/customApis', parameters('customApis_lacustomconnector_tsg_aip_textanalyticsconnector_name'))]"
            ],
            "kind": "V1",
            "properties": {
                "displayName": "demo",
                "customParameterValues": {},
                "api": {
                    "id": "[resourceId('Microsoft.Web/customApis', parameters('customApis_lacustomconnector_tsg_aip_textanalyticsconnector_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_fa_tsg_aip_app_name')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_rgtsgaipgrp1_8b57_name'))]"
            ],
            "tags": {
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "CaseCode": "dp0"
            },
            "kind": "functionapp",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_fa_tsg_aip_app_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_fa_tsg_aip_app_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_rgtsgaipgrp1_8b57_name'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {},
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_fa_tsg_aip_eg_name')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_rgtsgaipgrp1_86c4_name'))]"
            ],
            "tags": {
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "CaseCode": "dp0"
            },
            "kind": "functionapp",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_fa_tsg_aip_eg_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_fa_tsg_aip_eg_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_rgtsgaipgrp1_86c4_name'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {},
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_fa_tsg_aip_NYOrderDelivery_name')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_rgtsgaipgrp1_86a4_name'))]"
            ],
            "tags": {
                "CaseCode": "dp0",
                "Owner": "TSGCloudOps",
                "Tier": "Sandbox",
                "Department": "TSG"
            },
            "kind": "functionapp",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "fa-tsg-aip-nyorderdelivery.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "fa-tsg-aip-nyorderdelivery.scm.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_rgtsgaipgrp1_86a4_name'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {},
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_app_name'), '/web')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_app_name'))]"
            ],
            "tags": {
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "CaseCode": "dp0"
            },
            "properties": {
                "numberOfWorkers": -1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$fa-tsg-aip-app",
                "azureStorageAccounts": {},
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_eg_name'), '/web')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_eg_name'))]"
            ],
            "tags": {
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "CaseCode": "dp0"
            },
            "properties": {
                "numberOfWorkers": -1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$fa-tsg-aip-eg",
                "azureStorageAccounts": {},
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_NYOrderDelivery_name'), '/web')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_NYOrderDelivery_name'))]"
            ],
            "tags": {
                "CaseCode": "dp0",
                "Owner": "TSGCloudOps",
                "Tier": "Sandbox",
                "Department": "TSG"
            },
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$fa-tsg-aip-NYOrderDelivery",
                "azureStorageAccounts": {},
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_app_name'), '/090accba21db44bdbb7412d713df3494')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_app_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "N/A",
                "deployer": "GITHUB_ZIP_DEPLOY",
                "message": "Created via a push deployment",
                "start_time": "2020-09-25T13:28:00.3239243Z",
                "end_time": "2020-09-25T13:28:22.9275299Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_app_name'), '/16e8571772c0490a9d7fdef42c0375f7')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_app_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "N/A",
                "deployer": "GITHUB_ZIP_DEPLOY",
                "message": "Created via a push deployment",
                "start_time": "2020-09-25T10:42:23.4735626Z",
                "end_time": "2020-09-25T10:42:47.8075918Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_app_name'), '/1ecd43bb348c42139f6c188313b1f5d4')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_app_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "N/A",
                "deployer": "GITHUB_ZIP_DEPLOY",
                "message": "Created via a push deployment",
                "start_time": "2020-09-25T10:28:21.887474Z",
                "end_time": "2020-09-25T10:28:44.7725408Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_app_name'), '/5a8fc350c027498aa095ba9cfe9574d3')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_app_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "N/A",
                "deployer": "GITHUB_ZIP_DEPLOY",
                "message": "Created via a push deployment",
                "start_time": "2020-09-25T10:11:36.3344015Z",
                "end_time": "2020-09-25T10:11:45.5565875Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_app_name'), '/bfd05bd9a3750d2fc599a315aeacea5bdf0f6ee41601029729218')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_app_name'))]"
            ],
            "properties": {
                "status": 4,
                "author": "amruta125",
                "deployer": "GitHub",
                "message": "{\"type\":\"Deployment\",\"sha\":\"bfd05bd9a3750d2fc599a315aeacea5bdf0f6ee4\",\"repoName\":\"amruta125/newfunction\",\"slotName\":\"production\"}",
                "start_time": "2020-09-25T10:28:49.3260984Z",
                "end_time": "2020-09-25T10:28:49.3260984Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_app_name'), '/c03d28851dc3eaa635bb0cd5aace745ed2388e921601030574773')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_app_name'))]"
            ],
            "properties": {
                "status": 4,
                "author": "amruta125",
                "deployer": "GitHub",
                "message": "{\"type\":\"Deployment\",\"sha\":\"c03d28851dc3eaa635bb0cd5aace745ed2388e92\",\"repoName\":\"amruta125/newfunction\",\"slotName\":\"production\"}",
                "start_time": "2020-09-25T10:42:55.2017899Z",
                "end_time": "2020-09-25T10:42:55.2017899Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_app_name'), '/c4f8787d3eed4095ad1337d74d5ca248')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_app_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "N/A",
                "deployer": "GITHUB_ZIP_DEPLOY",
                "message": "Created via a push deployment",
                "start_time": "2020-09-25T10:25:19.0767947Z",
                "end_time": "2020-09-25T10:25:46.5066739Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_app_name'), '/d2b804068b71a6c674aac035ec3005de56fa47d61601029549690')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_app_name'))]"
            ],
            "properties": {
                "status": 4,
                "author": "amruta125",
                "deployer": "GitHub",
                "message": "{\"type\":\"Deployment\",\"sha\":\"d2b804068b71a6c674aac035ec3005de56fa47d6\",\"repoName\":\"amruta125/newfunction\",\"slotName\":\"production\"}",
                "start_time": "2020-09-25T10:25:49.8268917Z",
                "end_time": "2020-09-25T10:25:49.8268917Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_app_name'), '/d373fda6a7aff728956ce494cb71c65692835c9e1601028710140')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_app_name'))]"
            ],
            "properties": {
                "status": 4,
                "author": "amruta125",
                "deployer": "GitHub",
                "message": "{\"type\":\"Deployment\",\"sha\":\"d373fda6a7aff728956ce494cb71c65692835c9e\",\"repoName\":\"amruta125/newfunction\",\"slotName\":\"production\"}",
                "start_time": "2020-09-25T10:11:50.5468435Z",
                "end_time": "2020-09-25T10:11:50.5468435Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_app_name'), '/f818b3cd17336642157880997dfd8cee00591e841601040506457')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_app_name'))]"
            ],
            "properties": {
                "status": 4,
                "author": "amruta125",
                "deployer": "GitHub",
                "message": "{\"type\":\"Deployment\",\"sha\":\"f818b3cd17336642157880997dfd8cee00591e84\",\"repoName\":\"amruta125/newfunction\",\"slotName\":\"production\"}",
                "start_time": "2020-09-25T13:28:26.5964938Z",
                "end_time": "2020-09-25T13:28:26.5964938Z",
                "active": true
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_eg_name'), '/EventGridTrigger')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_eg_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://fa-tsg-aip-eg.azurewebsites.net/admin/vfs/site/wwwroot/EventGridTrigger/",
                "script_href": "https://fa-tsg-aip-eg.azurewebsites.net/admin/vfs/site/wwwroot/EventGridTrigger/run.csx",
                "config_href": "https://fa-tsg-aip-eg.azurewebsites.net/admin/vfs/site/wwwroot/EventGridTrigger/function.json",
                "href": "https://fa-tsg-aip-eg.azurewebsites.net/admin/functions/EventGridTrigger",
                "config": {},
                "test_data": "{\r\n  \"topic\": \"/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/test/providers/Microsoft.EventHub/namespaces/test\",\r\n  \"subject\": \"eventhubs/test\",\r\n  \"eventType\": \"captureFileCreated\",\r\n  \"eventTime\": \"2017-07-14T23:10:27.7689666Z\",\r\n  \"id\": \"7b11c4ce-1c34-4416-848b-1730e766f126\",\r\n  \"data\": {\r\n    \"fileUrl\": \"https://test.blob.core.windows.net/debugging/testblob.txt\",\r\n    \"fileType\": \"AzureBlockBlob\",\r\n    \"partitionId\": \"1\",\r\n    \"sizeInBytes\": 0,\r\n    \"eventCount\": 0,\r\n    \"firstSequenceNumber\": -1,\r\n    \"lastSequenceNumber\": -1,\r\n    \"firstEnqueueTime\": \"0001-01-01T00:00:00\",\r\n    \"lastEnqueueTime\": \"0001-01-01T00:00:00\"\r\n  },\r\n  \"dataVersion\": \"\",\r\n  \"metadataVersion\": \"1\" \r\n}\r\n"
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_app_name'), '/HttpTrigger')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_app_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://fa-tsg-aip-app.azurewebsites.net/admin/vfs/site/wwwroot/HttpTrigger/",
                "script_href": "https://fa-tsg-aip-app.azurewebsites.net/admin/vfs/site/wwwroot/HttpTrigger/run.csx",
                "config_href": "https://fa-tsg-aip-app.azurewebsites.net/admin/vfs/site/wwwroot/HttpTrigger/function.json",
                "href": "https://fa-tsg-aip-app.azurewebsites.net/admin/functions/HttpTrigger",
                "config": {},
                "test_data": "{\"method\":\"post\",\"queryStringParams\":[],\"headers\":[],\"body\":\"{\\n    \\\"orderID\\\" : \\\"AH-100\\\",\\n    \\\"quantity\\\" : \\\"505\\\",\\n    \\\"useremail\\\" : \\\"abc@outlook.com\\\",\\n    \\\"price\\\" : \\\"1000\\\",\\n    \\\"dt\\\"  : \\\"2020/8/09\\\"\\n}\"}"
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_app_name'), '/HttpTriggerCSharp1')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_app_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://fa-tsg-aip-app.azurewebsites.net/admin/vfs/site/wwwroot/HttpTriggerCSharp1/",
                "script_href": "https://fa-tsg-aip-app.azurewebsites.net/admin/vfs/site/wwwroot/bin/azure-function.dll",
                "config_href": "https://fa-tsg-aip-app.azurewebsites.net/admin/vfs/site/wwwroot/HttpTriggerCSharp1/function.json",
                "href": "https://fa-tsg-aip-app.azurewebsites.net/admin/functions/HttpTriggerCSharp1",
                "config": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_app_name'), '/HttpTriggerCSharp2')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_app_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://fa-tsg-aip-app.azurewebsites.net/admin/vfs/site/wwwroot/HttpTriggerCSharp2/",
                "script_href": "https://fa-tsg-aip-app.azurewebsites.net/admin/vfs/site/wwwroot/bin/azure-function.dll",
                "config_href": "https://fa-tsg-aip-app.azurewebsites.net/admin/vfs/site/wwwroot/HttpTriggerCSharp2/function.json",
                "href": "https://fa-tsg-aip-app.azurewebsites.net/admin/functions/HttpTriggerCSharp2",
                "config": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_NYOrderDelivery_name'), '/ServiceBusTopicTrigger1')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_NYOrderDelivery_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://fa-tsg-aip-nyorderdelivery.azurewebsites.net/admin/vfs/site/wwwroot/ServiceBusTopicTrigger1/",
                "script_href": "https://fa-tsg-aip-nyorderdelivery.azurewebsites.net/admin/vfs/site/wwwroot/ServiceBusTopicTrigger1/run.csx",
                "config_href": "https://fa-tsg-aip-nyorderdelivery.azurewebsites.net/admin/vfs/site/wwwroot/ServiceBusTopicTrigger1/function.json",
                "href": "https://fa-tsg-aip-nyorderdelivery.azurewebsites.net/admin/functions/ServiceBusTopicTrigger1",
                "config": {},
                "test_data": "Service Bus Message"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_app_name'), '/', parameters('sites_fa_tsg_aip_app_name'), '.azurewebsites.net')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_app_name'))]"
            ],
            "properties": {
                "siteName": "fa-tsg-aip-app",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_eg_name'), '/', parameters('sites_fa_tsg_aip_eg_name'), '.azurewebsites.net')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_eg_name'))]"
            ],
            "properties": {
                "siteName": "fa-tsg-aip-eg",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fa_tsg_aip_NYOrderDelivery_name'), '/', parameters('sites_fa_tsg_aip_NYOrderDelivery_name'), '.azurewebsites.net')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fa_tsg_aip_NYOrderDelivery_name'))]"
            ],
            "properties": {
                "siteName": "fa-tsg-aip-NYOrderDelivery",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2019-06-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___fa_tsg_aip_app_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_fa_tsg_aip_app_name'))]",
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector",
                    "name": "Failure Anomalies",
                    "description": "Detects if your application experiences an abnormal rise in the rate of HTTP requests or dependency calls that are reported as failed. The anomaly detection uses machine learning algorithms and occurs in near real time, therefore there's no need to define a frequency for this signal.<br/></br/>To help you triage and diagnose the problem, an analysis of the characteristics of the failures and related telemetry is provided with the detection. This feature works for any app, hosted in the cloud or on your own servers, that generates request or dependency telemetry - for example, if you have a worker role that calls <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackrequest\\\" target=\\\"_blank\\\">TrackRequest()</a> or <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackdependency\\\" target=\\\"_blank\\\">TrackDependency()</a>.<br/><br/><a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/azure-monitor/app/proactive-failure-diagnostics\\\" target=\\\"_blank\\\">Learn more about Failure Anomalies</a>",
                    "supportedResourceTypes": [
                        "ApplicationInsights"
                    ]
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('components_fa_tsg_aip_app_name'))]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
                    ]
                }
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2019-06-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___fa_tsg_aip_eg_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_fa_tsg_aip_eg_name'))]",
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector",
                    "name": "Failure Anomalies",
                    "description": "Detects if your application experiences an abnormal rise in the rate of HTTP requests or dependency calls that are reported as failed. The anomaly detection uses machine learning algorithms and occurs in near real time, therefore there's no need to define a frequency for this signal.<br/></br/>To help you triage and diagnose the problem, an analysis of the characteristics of the failures and related telemetry is provided with the detection. This feature works for any app, hosted in the cloud or on your own servers, that generates request or dependency telemetry - for example, if you have a worker role that calls <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackrequest\\\" target=\\\"_blank\\\">TrackRequest()</a> or <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackdependency\\\" target=\\\"_blank\\\">TrackDependency()</a>.<br/><br/><a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/azure-monitor/app/proactive-failure-diagnostics\\\" target=\\\"_blank\\\">Learn more about Failure Anomalies</a>",
                    "supportedResourceTypes": [
                        "ApplicationInsights"
                    ]
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('components_fa_tsg_aip_eg_name'))]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
                    ]
                }
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2019-06-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___fa_tsg_aip_nyorderdeliveryappinsight_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_fa_tsg_aip_NYOrderDeliveryAppInsight_name'))]",
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector",
                    "name": "Failure Anomalies",
                    "description": "Detects if your application experiences an abnormal rise in the rate of HTTP requests or dependency calls that are reported as failed. The anomaly detection uses machine learning algorithms and occurs in near real time, therefore there's no need to define a frequency for this signal.<br/></br/>To help you triage and diagnose the problem, an analysis of the characteristics of the failures and related telemetry is provided with the detection. This feature works for any app, hosted in the cloud or on your own servers, that generates request or dependency telemetry - for example, if you have a worker role that calls <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackrequest\\\" target=\\\"_blank\\\">TrackRequest()</a> or <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackdependency\\\" target=\\\"_blank\\\">TrackDependency()</a>.<br/><br/><a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/azure-monitor/app/proactive-failure-diagnostics\\\" target=\\\"_blank\\\">Learn more about Failure Anomalies</a>",
                    "supportedResourceTypes": [
                        "ApplicationInsights"
                    ]
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('components_fa_tsg_aip_NYOrderDeliveryAppInsight_name'))]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'), '/ToDoList/Items')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'), 'ToDoList')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "Items",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/category"
                        ],
                        "kind": "Hash"
                    },
                    "uniqueKeyPolicy": {
                        "uniqueKeys": []
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    }
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'), '/RetailDemo/WebsiteData')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'), 'RetailDemo')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "WebsiteData",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/CartID"
                        ],
                        "kind": "Hash",
                        "version": 2
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    }
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'), '/ToDoList/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'), 'ToDoList')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'))]"
            ],
            "properties": {
                "resource": {
                    "throughput": 400
                }
            }
        },
        {
            "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
            "apiVersion": "2020-04-01-preview",
            "name": "[concat(parameters('systemTopics_eg_tsg_aip_topic_name'), '/eg-tsg-aip-subscription')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', parameters('systemTopics_eg_tsg_aip_topic_name'))]",
                "[resourceId('Microsoft.Web/sites/functions', parameters('sites_fa_tsg_aip_eg_name'), 'EventGridTrigger')]"
            ],
            "properties": {
                "destination": {
                    "properties": {
                        "resourceId": "[resourceId('Microsoft.Web/sites/functions', parameters('sites_fa_tsg_aip_eg_name'), 'EventGridTrigger')]",
                        "maxEventsPerBatch": 1,
                        "preferredBatchSizeInKilobytes": 64
                    },
                    "endpointType": "AzureFunction"
                },
                "filter": {
                    "includedEventTypes": [
                        "Microsoft.Storage.BlobCreated",
                        "Microsoft.Storage.BlobDeleted"
                    ]
                },
                "labels": [],
                "eventDeliverySchema": "EventGridSchema",
                "retryPolicy": {
                    "maxDeliveryAttempts": 30,
                    "eventTimeToLiveInMinutes": 1440
                }
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_tsg_aip_siem_name'), '/insights-metrics-pt1m/$Default')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_tsg_aip_siem_name'), 'insights-metrics-pt1m')]",
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_tsg_aip_siem_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_tsg_aip_siem_name'), '/', parameters('namespaces_tsg_aip_siem_name'), '-eventhub/$Default')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_tsg_aip_siem_name'), concat(parameters('namespaces_tsg_aip_siem_name'), '-eventhub'))]",
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_tsg_aip_siem_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_la_tsg_aip_BostonOrderDelivery_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_office365_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_topic_subscription_(auto-complete)": {
                            "recurrence": {
                                "frequency": "Second",
                                "interval": 30
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('orders'))}/subscriptions/@{encodeURIComponent('bostonOrders')}/messages/head",
                                "queries": {
                                    "subscriptionType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Send_an_email_(V2)": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Body": "<p>Hi Team,<br>\n<br>\nAn order is received for Boston location.<br>\n<br>\nThanks,<br>\nOrderProcurement Team</p>",
                                    "Subject": "Boston Order Notification",
                                    "To": "deepshikha.lathiya@infosys.com"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "office365_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_office365_name'))]",
                                "connectionName": "office365",
                                "id": "/subscriptions/95977e9e-cd99-4dff-b085-498c9c0a4fb2/providers/Microsoft.Web/locations/eastus2/managedApis/office365"
                            },
                            "servicebus_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_name'))]",
                                "connectionName": "servicebus",
                                "id": "/subscriptions/95977e9e-cd99-4dff-b085-498c9c0a4fb2/providers/Microsoft.Web/locations/eastus2/managedApis/servicebus"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_sb_tsg_aip_OrderDelivery_name'), '/orders/bostonOrders')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_sb_tsg_aip_OrderDelivery_name'), 'orders')]",
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_sb_tsg_aip_OrderDelivery_name'))]"
            ],
            "properties": {
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 1000,
                "status": "Active",
                "enableBatchedOperations": true,
                "autoDeleteOnIdle": "P10675198DT2H48M5S"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/sqldb-tsg-aip-customerdata/Default')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlsvr_tsg_aip_svr1_name'), 'sqldb-tsg-aip-customerdata')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/sqldb-tsg-aip-customerdata/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlsvr_tsg_aip_svr1_name'), 'sqldb-tsg-aip-customerdata')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "retentionDays": 0,
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
                "isAzureMonitorTargetEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/sqldb-tsg-aip-customerdata/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlsvr_tsg_aip_svr1_name'), 'sqldb-tsg-aip-customerdata')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "weeklyRetention": "PT0S",
                "monthlyRetention": "PT0S",
                "yearlyRetention": "PT0S",
                "weekOfYear": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
            "apiVersion": "2020-02-02-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/sqldb-tsg-aip-customerdata/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlsvr_tsg_aip_svr1_name'), 'sqldb-tsg-aip-customerdata')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "retentionDays": 7
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/sqldb-tsg-aip-customerdata/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlsvr_tsg_aip_svr1_name'), 'sqldb-tsg-aip-customerdata')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "retentionDays": 0,
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
                "isAzureMonitorTargetEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/sqldb-tsg-aip-customerdata/Default')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlsvr_tsg_aip_svr1_name'), 'sqldb-tsg-aip-customerdata')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2020-02-02-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/sqldb-tsg-aip-customerdata/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlsvr_tsg_aip_svr1_name'), 'sqldb-tsg-aip-customerdata')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/sqldb-tsg-aip-customerdata/current')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlsvr_tsg_aip_svr1_name'), 'sqldb-tsg-aip-customerdata')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "status": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_sqlsvr_tsg_aip_svr1_name'), '/sqldb-tsg-aip-customerdata/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sqlsvr_tsg_aip_svr1_name'), 'sqldb-tsg-aip-customerdata')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sqlsvr_tsg_aip_svr1_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa1_name'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_satsgaipsa1_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa1_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa2_name'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_satsgaipsa2_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa2_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storageaccountrgtsg9b78_name'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_storageaccountrgtsg9b78_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountrgtsg9b78_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa1_name'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_satsgaipsa1_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa1_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa2_name'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_satsgaipsa2_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa2_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storageaccountrgtsg9b78_name'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_storageaccountrgtsg9b78_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountrgtsg9b78_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa1_name'), '/default/container1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_satsgaipsa1_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa1_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "Container"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa1_name'), '/default/container2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_satsgaipsa1_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa1_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "Blob"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa2_name'), '/default/fa-tsg-aip-appb15f')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_satsgaipsa2_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa2_name'))]"
            ],
            "properties": {
                "accessTier": "TransactionOptimized",
                "shareQuota": 5120,
                "enabledProtocols": "SMB"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storageaccountrgtsg9b78_name'), '/default/fa-tsg-aip-eg928a')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_storageaccountrgtsg9b78_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountrgtsg9b78_name'))]"
            ],
            "properties": {
                "accessTier": "TransactionOptimized",
                "shareQuota": 5120,
                "enabledProtocols": "SMB"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa2_name'), '/default/outqueue')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccounts_satsgaipsa2_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa2_name'))]"
            ],
            "properties": {
                "metadata": {}
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storageaccountrgtsg9b78_name'), '/default/outqueueeventgrid')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccounts_storageaccountrgtsg9b78_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountrgtsg9b78_name'))]"
            ],
            "properties": {
                "metadata": {}
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_satsgaipsa1_name'), '/default/DemoTable')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageAccounts_satsgaipsa1_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_satsgaipsa1_name'))]"
            ]
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'), '/RetailDemo/WebsiteData/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers', parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'), 'RetailDemo', 'WebsiteData')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'), 'RetailDemo')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmosdb_tsg_aip_cosmos1_name'))]"
            ],
            "properties": {
                "resource": {
                    "throughput": 400
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_la_tsg_aip_OrderRequestProcess_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/integrationAccounts', parameters('integrationAccounts_ia_tsg_aip_ia1_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_office365_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]"
            ],
            "tags": {
                "CaseCode": "dp0",
                "Department": "TSG",
                "Owner": "TSGCloudOps",
                "Tier": "Sandbox"
            },
            "properties": {
                "state": "Enabled",
                "integrationAccount": {
                    "id": "[resourceId('Microsoft.Logic/integrationAccounts', parameters('integrationAccounts_ia_tsg_aip_ia1_name'))]"
                },
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "OrderRequest": {
                                            "properties": {
                                                "CustomerID": {
                                                    "type": "string"
                                                },
                                                "ItemQuantity": {
                                                    "type": "string"
                                                },
                                                "OrderDate": {
                                                    "type": "string"
                                                },
                                                "OrderID": {
                                                    "type": "string"
                                                },
                                                "ProductID": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Initialize_variable_-_Order_ID": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "OrderID",
                                        "type": "string",
                                        "value": "@{xpath(xml(triggerBody()),'string(/OrderRequest/OrderID)')}"
                                    }
                                ]
                            }
                        },
                        "Process_Scope": {
                            "actions": {
                                "If_ItemQuantity_is_greater_than_500": {
                                    "actions": {
                                        "Send_an_email_notification_to_Inventory_department": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "Body": "<p>Hi Team,<br>\n<br>\nWe have received an order having quantity greater than 500 items, for below request -<br>\nOrder ID :@{variables('OrderID')}<br>\n<br>\nThanks,<br>\nDeepshikha<br>\n</p>",
                                                    "Subject": "Order Quantity Notification",
                                                    "To": "deepshikha.lathiya@infosys.com"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v2/Mail"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "XML_Validation": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "greater": [
                                                    "@int(xpath(xml(triggerBody()),'string(/OrderRequest/ItemQuantity)'))",
                                                    500
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Insert_row_(V2)": {
                                    "runAfter": {
                                        "XML_Validation": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "OrderID": "@variables('OrderID')",
                                            "OrderRequest": "@{triggerBody()}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[OrderRequestData]'))}/items"
                                    },
                                    "runtimeConfiguration": {
                                        "secureData": {
                                            "properties": [
                                                "inputs",
                                                "outputs"
                                            ]
                                        }
                                    }
                                },
                                "Response": {
                                    "runAfter": {
                                        "Transform_XML": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "body": "@body('Transform_XML')",
                                        "statusCode": 200
                                    }
                                },
                                "Transform_XML": {
                                    "runAfter": {
                                        "Insert_row_(V2)": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Xslt",
                                    "inputs": {
                                        "content": "@{triggerBody()}",
                                        "integrationAccount": {
                                            "map": {
                                                "name": "xsl_OrderRequest_To_CustomerInvoice"
                                            }
                                        }
                                    }
                                },
                                "XML_Validation": {
                                    "runAfter": {},
                                    "type": "XmlValidation",
                                    "inputs": {
                                        "content": "@{triggerBody()}",
                                        "integrationAccount": {
                                            "schema": {
                                                "name": "OrderRequest"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_-_Order_ID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_office365_name'))]",
                                "connectionName": "office365",
                                "id": "/subscriptions/95977e9e-cd99-4dff-b085-498c9c0a4fb2/providers/Microsoft.Web/locations/eastus2/managedApis/office365"
                            },
                            "sql": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]",
                                "connectionName": "sql",
                                "id": "/subscriptions/95977e9e-cd99-4dff-b085-498c9c0a4fb2/providers/Microsoft.Web/locations/eastus2/managedApis/sql"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_sb_tsg_aip_OrderDelivery_name'), '/orders/bostonOrders/LocationCode')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_sb_tsg_aip_OrderDelivery_name'), 'orders', 'bostonOrders')]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_sb_tsg_aip_OrderDelivery_name'), 'orders')]",
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_sb_tsg_aip_OrderDelivery_name'))]"
            ],
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "LocationCode='Boston'",
                    "compatibilityLevel": 20
                }
            }
        }
    ]
}
